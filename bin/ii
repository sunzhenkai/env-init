#!/bin/bash
# set -x
BASE=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)
APP=${1}
SCRIPT="${BASE}/../app/${APP}"
source "${BASE}/../scripts/tool.sh"

function usage() {
    cat <<EOF
usage: ii [app|command] [args]
EOF
}

function info() {
    cat <<EOF
ROOT_DIR=$ENV_INIT_DIR
ENV_INIT_ENV_FILE=$ENV_INIT_ENV_FILE
ENV_INSTALL_DIR=$ENV_INSTALL_DIR
ENV_INSTALL_PACKAGE_DIR=$ENV_INSTALL_PACKAGE_DIR
ENV_INIT_CODE=$ENV_INIT_CODE
ROOT_INSTALL_DIR=$(tool::get_root_install_dir)
PATH=$PATH
EOF
}

function clean() {
    echo "clean ..."
    echo "clean done"
}

function path() {
    APP=""
    SUBPATH=""
    while getopts ":a:s:" opt; do
        echo $opt
        case $opt in
        a) APP="$OPTARG" ;;
        s) SUBPATH="$OPTARG" ;;
        esac
    done
    [ -z "$APP" ] && echo "app not specified" && exit 1
    tool::append_binary_path $APP $SUBPATH
}

case $APP in
"") usage && exit 1 ;;
ls)
    for i in $(ls "$BASE/../app/"); do echo $i; done; exit 0 ;;
info)
    info; exit 0 ;;
clean)
    clean; exit 0 ;;
path)
    path ${*:2}; exit 0 ;;
*) ;;
esac

# presence check
if [ ! -e "$SCRIPT" ]; then
    echo "[InstallApp] Failed, app not found. [app=${APP}]"
    exit 1
fi

echo "[InstallApp] Install. [app=${APP}, arguments='${*:2}', dest=${ENV_INIT_DIR}]"
export APP=$APP
if [ -e "$SCRIPT/gate.sh" ]; then
    bash "${BASE}/../app/${APP}/gate.sh" ${*:2}
else
    bash "${BASE}/../app/${APP}" ${*:2}
fi
